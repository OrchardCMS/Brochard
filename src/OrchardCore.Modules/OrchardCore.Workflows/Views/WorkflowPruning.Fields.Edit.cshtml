@using OrchardCore.Workflows.WorkflowPruning.Services
@using OrchardCore.Workflows.WorkflowPruning.ViewModels
@model WorkflowPruningViewModel
@{
    var status = WorkflowStatusBuilder.Build(Model.Statuses);
}

<section>
    <div class="form-check">
        <input type="checkbox" class="form-check-input" asp-for="Disabled" checked="@Model.Disabled" />
        <label class="form-check-label" asp-for="Disabled">@T["Disable"]</label>
        <span class="hint dashed">@T["Whether the task is disabled."]</span>
    </div>

    <div class="mb-3" asp-validation-class-for="RetentionDays">
        <label asp-for="RetentionDays" class="control-label">@T["Retention period"]</label>
        <input asp-for="RetentionDays" type="number" class="form-control" />
        <span class="hint">@T["The number of days a workflow instance is retained."]</span>
    </div>

    <div class="mb-3" asp-validation-class-for="LastRunUtc">
        <label asp-for="LastRunUtc" class="control-label">@T["Last run"]</label>
        <div class="form-control">
            @(Model.LastRunUtc.HasValue ? await DisplayAsync(await New.DateTime(Utc:
                Model.LastRunUtc.Value, Format: "g")) : T["Never"])
        </div>
        <span class="hint">@T["The last time the background pruning task was run."]</span>
    </div>

    <div class="row">
        @for (var i = 0; i < status.Length; i++)
        {
            <div class="col-xs-12">
                <div class="form-check">
                    <input type="checkbox" class="form-check-input workflow-status" id="@Html.IdFor(m => m.Statuses[i])"
                           name="@Html.NameFor(x => x.Statuses)" checked="@status[i].IsSelected" value="@status[i].Value">
                    <label class="form-check-label" for="@Html.IdFor(m => m.Statuses[i])">@T[status[i].Value]</label>
                </div>
            </div>
        }
    </div>
</section>
